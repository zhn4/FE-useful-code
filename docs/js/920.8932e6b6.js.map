{"version":3,"file":"js/920.8932e6b6.js","mappings":"wKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,QAAQ,CAACG,IAAI,QAAQD,YAAY,QAAQE,YAAY,CAAC,MAAQ,QAAQ,OAAS,QAAQ,WAAa,QAAQC,MAAM,CAAC,SAAW,GAAG,YAAc,MAAML,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,SAAS,KAAO,SAASC,GAAG,CAAC,MAAQR,EAAIS,cAAc,CAACT,EAAIU,GAAG,WAAWR,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,UAAU,KAAO,SAASC,GAAG,CAAC,MAAQR,EAAIW,aAAa,CAACX,EAAIU,GAAG,YAAY,KAAKR,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,SAAS,CAACJ,EAAIU,GAAG,UAAUR,EAAG,MAAM,CAACE,YAAY,YAAY,CAACJ,EAAIY,GAAIZ,EAAIa,YAAY,SAASC,EAAKC,GAAO,MAAO,CAACb,EAAG,MAAM,CAACc,IAAID,EAAMX,YAAY,YAAY,CAACF,EAAG,MAAM,CAACF,EAAIU,GAAG,IAAIV,EAAIiB,GAAGF,EAAQ,GAAG,SAASb,EAAG,MAAM,CAACc,IAAID,EAAMX,YAAY,MAAMG,MAAM,CAAC,IAAMO,OAAU,KAAI,MAC72B,EACII,EAAkB,G,4BC8BtB,GACAC,IAAAA,GACA,OACAC,OAAA,KACAC,eAAA,KACAR,WAAA,GAEA,EACAS,QAAA,CACA,gBAAAX,GACA,IACA,KAAAS,aAAAG,UAAAC,aAAAC,aAAA,CAAAC,OAAA,IACA,KAAAC,MAAAD,MAAAE,UAAA,KAAAR,OACA,KAAAS,gBACA,OAAAC,GACA,KAAAC,SAAAC,MAAA,UACA,CACA,EACAvB,WAAAA,GACA,KAAAW,SACA,KAAAA,OAAAa,YAAAC,SAAAC,GAAAA,EAAAC,SACA,KAAAhB,OAAA,KACA,KAAAO,MAAAD,MAAAE,UAAA,MAEAS,cAAA,KAAAhB,eACA,EACAQ,cAAAA,GACA,KAAAR,eAAAiB,YAAA,KAAAC,eAAA,IACA,EACA,oBAAAA,GACA,MAAAb,EAAA,KAAAC,MAAAD,MAEAc,EAAAC,SAAAC,cAAA,UACAF,EAAAG,MAAAjB,EAAAkB,YAAA,IACAJ,EAAAK,OAAAnB,EAAAoB,aAAA,IACA,MAAAC,EAAAP,EAAAQ,WAAA,MACAD,EAAAE,UAAAvB,EAAA,IAAAc,EAAAG,MAAAH,EAAAK,QAGA,MAAAK,EAAAV,EAAAW,UAAA,aACA,KAAAtC,WAAAuC,KAAAF,GACAG,QAAAC,IAAA,KAAAzC,YAEA,MACAM,MAAA,KAAAoC,UACAC,IAAAA,UAAAN,EAAA,OACAG,QAAAC,IAAA,QAAAC,EACA,GAEAE,aAAAA,GACA,KAAAhD,aACA,GCnF6P,I,UCQzPiD,GAAY,OACd,EACA3D,EACAmB,GACA,EACA,KACA,WACA,MAIF,EAAewC,EAAiB,O","sources":["webpack://FE-useful-code/./src/views/testPage/index.vue","webpack://FE-useful-code/src/views/testPage/index.vue","webpack://FE-useful-code/./src/views/testPage/index.vue?ea2f","webpack://FE-useful-code/./src/views/testPage/index.vue?298d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"test-page\"},[_c('div',{staticClass:\"video-part\"},[_c('video',{ref:\"video\",staticClass:\"video\",staticStyle:{\"width\":\"640px\",\"height\":\"480px\",\"background\":\"#000\"},attrs:{\"autoplay\":\"\",\"playsinline\":\"\"}}),_c('div',{staticClass:\"video-controls\"},[_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"large\"},on:{\"click\":_vm.closeCamera}},[_vm._v(\"关闭摄像头\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"large\"},on:{\"click\":_vm.openCamera}},[_vm._v(\"打开摄像头\")])],1)]),_c('div',{staticClass:\"img-part\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"截图列表\")]),_c('div',{staticClass:\"img-list\"},[_vm._l((_vm.imgSrcList),function(item,index){return [_c('div',{key:index,staticClass:\"img-item\"},[_c('div',[_vm._v(\"第\"+_vm._s(index + 1)+\"张图片\")]),_c('img',{key:index,staticClass:\"img\",attrs:{\"src\":item}})])]})],2)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"test-page\">\r\n    <div class=\"video-part\">\r\n      <video\r\n        ref=\"video\"\r\n        autoplay\r\n        class=\"video\"\r\n        playsinline\r\n        style=\"width: 640px; height: 480px; background: #000\"\r\n      ></video>\r\n      <div class=\"video-controls\">\r\n        <el-button type=\"danger\" @click=\"closeCamera\" size=\"large\">关闭摄像头</el-button>\r\n        <el-button type=\"primary\" @click=\"openCamera\" size=\"large\">打开摄像头</el-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"img-part\">\r\n      <div class=\"title\">截图列表</div>\r\n      <div class=\"img-list\">\r\n        <template v-for=\"(item, index) in imgSrcList\">\r\n          <div class=\"img-item\" :key=\"index\">\r\n            <div>第{{ index + 1 }}张图片</div>\r\n            <img :src=\"item\" :key=\"index\" class=\"img\" />\r\n          </div>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Tesseract from 'tesseract.js'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      stream: null,\r\n      recognizeTimer: null,\r\n      imgSrcList: [],\r\n    }\r\n  },\r\n  methods: {\r\n    async openCamera() {\r\n      try {\r\n        this.stream = await navigator.mediaDevices.getUserMedia({ video: true })\r\n        this.$refs.video.srcObject = this.stream\r\n        this.startRecognize()\r\n      } catch (e) {\r\n        this.$message.error('无法打开摄像头')\r\n      }\r\n    },\r\n    closeCamera() {\r\n      if (this.stream) {\r\n        this.stream.getTracks().forEach(track => track.stop())\r\n        this.stream = null\r\n        this.$refs.video.srcObject = null\r\n      }\r\n      clearInterval(this.recognizeTimer)\r\n    },\r\n    startRecognize() {\r\n      this.recognizeTimer = setInterval(this.recognizeFrame, 2000)\r\n    },\r\n    async recognizeFrame() {\r\n      const video = this.$refs.video\r\n      // 创建离屏canvas\r\n      const canvas = document.createElement('canvas')\r\n      canvas.width = video.videoWidth || 640\r\n      canvas.height = video.videoHeight || 480\r\n      const ctx = canvas.getContext('2d')\r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height)\r\n      // 用img展示当前帧\r\n      // this.imgSrc = canvas.toDataURL('image/png');\r\n      const currentImg = canvas.toDataURL('image/png')\r\n      this.imgSrcList.push(currentImg)\r\n      console.log(this.imgSrcList)\r\n      // 识别内容\r\n      const {\r\n        data: { text },\r\n      } = await Tesseract.recognize(currentImg, 'eng')\r\n      console.log('识别内容:', text)\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    this.closeCamera()\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.test-page {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.video-part {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-right: 20px;\r\n\r\n  .video {\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.img-part {\r\n  width: 240px;\r\n  height: 480px;\r\n  overflow: auto;\r\n  border: 1px solid #ccc;\r\n\r\n  .title {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    position: sticky;\r\n    top: 0;\r\n    padding: 10px;\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  .img-item {\r\n    padding: 10px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n\r\n  .img {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=f12b63f8&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=f12b63f8&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f12b63f8\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","ref","staticStyle","attrs","on","closeCamera","_v","openCamera","_l","imgSrcList","item","index","key","_s","staticRenderFns","data","stream","recognizeTimer","methods","navigator","mediaDevices","getUserMedia","video","$refs","srcObject","startRecognize","e","$message","error","getTracks","forEach","track","stop","clearInterval","setInterval","recognizeFrame","canvas","document","createElement","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","currentImg","toDataURL","push","console","log","text","Tesseract","beforeDestroy","component"],"sourceRoot":""}