{"version":3,"file":"js/955.4560bcc5.js","mappings":"yKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,YAAY,CAACG,IAAI,SAASC,MAAM,CAAC,OAAS,GAAG,eAAc,EAAM,UAAW,EAAK,kBAAiB,EAAM,YAAYN,EAAIO,iBAAiB,OAAS,eAAe,CAACL,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,YAAY,CAACN,EAAIQ,GAAG,gBAAgB,IAAI,GAAGN,EAAG,MAAM,CAACE,YAAY,UAAU,CAAEJ,EAAIS,UAAUC,OAAQR,EAAG,WAAW,CAACS,YAAY,CAAC,MAAQ,QAAQL,MAAM,CAAC,KAAON,EAAIS,UAAU,OAAS,GAAG,OAAS,SAAS,CAACP,EAAG,kBAAkB,CAACI,MAAM,CAAC,KAAO,QAAQ,MAAQ,KAAK,MAAQ,QAAQN,EAAIY,GAAIZ,EAAIa,aAAa,SAASC,GAAK,OAAOZ,EAAG,kBAAkB,CAACa,IAAID,EAAIR,MAAM,CAAC,KAAOQ,EAAI,MAAQA,IAAM,KAAI,GAAGd,EAAIgB,MAAM,IAC3tB,EACIC,EAAkB,G,iDCkBtB,GACAC,IAAAA,GACA,OACAL,YAAA,GACAJ,UAAA,GAGA,EACAU,QAAA,CACA,sBAAAZ,CAAAa,EAAAC,GAEA,KAAAR,YAAA,GACA,KAAAJ,UAAA,GACA,UAAAa,KAAAD,EAAA,CACA,MAAAE,EAAAD,EAAAE,KAAAF,QACA,KAAAG,UAAAF,EACA,CACA,EACAE,SAAAA,CAAAL,GACA,WAAAM,SAAAC,IACA,MAAAC,EAAA,IAAAC,WACAD,EAAAE,OAAAC,IACA,MAAAb,EAAA,IAAAc,WAAAD,EAAAE,OAAAC,QACAC,EAAAC,EAAAA,GAAAlB,EAAA,CAAAmB,KAAA,UAEAC,EAAAH,EAAAI,WAAA,GACAC,EAAAL,EAAAM,OAAAH,GACAI,QAAAC,IAAA,6BACAD,QAAAC,IAAAH,GACA,MAAAI,EAAAR,EAAAA,GAAAS,cAAAL,EAAA,CAAAM,OAAA,IACAJ,QAAAC,IAAA,6BACAD,QAAAC,IAAAC,GACAF,QAAAC,IAAA,0BACA,MAAAT,EAAA,KAAAa,iBAAAH,GAEA,GADAF,QAAAC,IAAAT,GACAU,EAAAlC,OAAA,CAEA,KAAAG,YAAAH,SACA,KAAAG,YAAA+B,EAAAV,EAAAc,QAGA,IAAAC,EAAAL,EAAAM,MAAAhB,EAAAc,OACA,QAAAG,EAAA,EAAAA,EAAAF,EAAAvC,OAAAyC,IAAA,CACA,MAAAC,EAAA,GACA,KAAAvC,YAAAwC,SAAA,CAAAtC,EAAAuC,KACAF,EAAArC,GAAAkC,EAAAE,GAAAG,IAAA,MAEA,KAAA7C,UAAA8C,KAAAH,EACA,CACA,CACAzB,GAAA,EAEAC,EAAA4B,kBAAApC,EAAA,GAEA,EACA2B,gBAAAA,CAAAU,GACA,IAAAC,EAAA,EACAC,EAAA,KACAC,GAAA,EAEA,QAAAT,EAAA,EAAAA,EAAA,GAAAA,IAAA,CACA,MAAAU,EAAAJ,EAAAN,GACAU,GAAAA,EAAAnD,OAAAgD,IACAA,EAAAG,EAAAnD,OACAiD,EAAAE,EACAD,EAAAT,EAEA,CACA,OAAAW,MAAAH,EAAAX,MAAAY,EACA,ICzF6P,I,UCSzPG,GAAY,OACd,EACAhE,EACAkB,GACA,EACA,KACA,WACA,MAIF,EAAe8C,EAAiB,O","sources":["webpack://FE-useful-code/./src/views/importExcelByMulti/index.vue","webpack://FE-useful-code/src/views/importExcelByMulti/index.vue","webpack://FE-useful-code/./src/views/importExcelByMulti/index.vue?11bc","webpack://FE-useful-code/./src/views/importExcelByMulti/index.vue?ae37"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"import-excel\"},[_c('div',{staticClass:\"top\"},[_c('el-upload',{ref:\"upload\",attrs:{\"action\":\"\",\"auto-upload\":false,\"multiple\":true,\"show-file-list\":false,\"on-change\":_vm.handleFileChange,\"accept\":\".xlsx,.xls\"}},[_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"选择Excel文件\")])],1)],1),_c('div',{staticClass:\"bottom\"},[(_vm.tableData.length)?_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"height\":\"100%\"}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"序号\",\"width\":\"60\"}}),_vm._l((_vm.tableHeader),function(col){return _c('el-table-column',{key:col,attrs:{\"prop\":col,\"label\":col}})})],2):_vm._e()],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"import-excel\">\r\n    <div class=\"top\">\r\n      <el-upload action=\"\" :auto-upload=\"false\" :multiple=\"true\" :show-file-list=\"false\" :on-change=\"handleFileChange\"\r\n        accept=\".xlsx,.xls\" ref=\"upload\">\r\n        <el-button type=\"primary\">选择Excel文件</el-button>\r\n      </el-upload>\r\n    </div>\r\n    <div class=\"bottom\">\r\n      <el-table v-if=\"tableData.length\" :data=\"tableData\" style=\"width: 100%;\" border height=\"100%\">\r\n        <el-table-column type=\"index\" label=\"序号\" width=\"60\" />\r\n        <el-table-column v-for=\"col in tableHeader\" :key=\"col\" :prop=\"col\" :label=\"col\" />\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tableHeader: [],\r\n      tableData: [],\r\n      // currentTableData: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async handleFileChange(file, fileList) {\r\n      // 清空旧数据\r\n      this.tableHeader = [];\r\n      this.tableData = [];\r\n      for (const f of fileList) {\r\n        const rawFile = f.raw || f; // el-upload 组件有 raw 属性\r\n        await this.readExcel(rawFile);\r\n      }\r\n    },\r\n    readExcel(file) {\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          const data = new Uint8Array(e.target.result);\r\n          const workbook = XLSX.read(data, { type: 'array' });\r\n          // 只读取第一个sheet\r\n          const sheetName = workbook.SheetNames[0];\r\n          const sheet = workbook.Sheets[sheetName];\r\n          console.log('%c读取的sheet:', 'color: red;');\r\n          console.log(sheet)\r\n          const json = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n          console.log('%c转换后的json:', 'color: red;');\r\n          console.log(json);\r\n          console.log('%c最长的数组:', 'color: red;');\r\n          const result = this.findLongestArray(json);\r\n          console.log(result);\r\n          if (json.length) {\r\n            // 第一行为表头\r\n            if (!this.tableHeader.length) {\r\n              this.tableHeader = json[result.index];\r\n            }\r\n            // 其余为数据\r\n            let finallyData = json.slice(result.index);\r\n            for (let i = 1; i < finallyData.length; i++) {\r\n              const row = {};\r\n              this.tableHeader.forEach((key, idx) => {\r\n                row[key] = finallyData[i][idx] || '';\r\n              });\r\n              this.tableData.push(row);\r\n            }\r\n          }\r\n          resolve();\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n      });\r\n    },\r\n    findLongestArray(arrays) {\r\n      let maxLen = 0;\r\n      let maxArr = null;\r\n      let maxIdx = -1;\r\n      // NOTE: 通常正式表格前的几行可能是标题或其他信息\r\n      for(let i = 0; i < 20; i++) {\r\n        const arr = arrays[i];\r\n        if (arr && (arr.length > maxLen)) {\r\n          maxLen = arr.length;\r\n          maxArr = arr;\r\n          maxIdx = i;\r\n        }\r\n      }\r\n      return { array: maxArr, index: maxIdx };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style style=\"less\" scoped>\r\n.import-excel {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n\r\n  .bottom {\r\n    width: 100%;\r\n    height: 100%;\r\n    flex: 1;\r\n    overflow: hidden;\r\n  }\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n  border: 1px solid #ddd !important;\r\n  padding: 8px;\r\n  text-align: left;\r\n  min-width: 80px;\r\n  max-width: 220px;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n  white-space: nowrap;\r\n}\r\n\r\n::v-deep .el-tabs {\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n::v-deep .el-tabs__content {\r\n  height: 100%;\r\n  overflow: auto;\r\n}\r\n</style>\r\n\r\n<style lang=\"less\">\r\n.html-raw {\r\n  table {\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  td {\r\n    border: 1px solid #ddd;\r\n    text-align: left;\r\n    padding: 4px;\r\n    min-width: 80px;\r\n    max-width: 220px;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2a2f7006&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=2a2f7006&prod&style=less&scoped=true&lang=css\"\nimport style1 from \"./index.vue?vue&type=style&index=1&id=2a2f7006&prod&lang=less\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2a2f7006\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","ref","attrs","handleFileChange","_v","tableData","length","staticStyle","_l","tableHeader","col","key","_e","staticRenderFns","data","methods","file","fileList","f","rawFile","raw","readExcel","Promise","resolve","reader","FileReader","onload","e","Uint8Array","target","result","workbook","XLSX","type","sheetName","SheetNames","sheet","Sheets","console","log","json","sheet_to_json","header","findLongestArray","index","finallyData","slice","i","row","forEach","idx","push","readAsArrayBuffer","arrays","maxLen","maxArr","maxIdx","arr","array","component"],"sourceRoot":""}