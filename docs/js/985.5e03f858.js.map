{"version":3,"file":"js/985.5e03f858.js","mappings":"yKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,KAAK,CAACF,EAAIK,GAAG,YAAYH,EAAG,WAAW,CAACE,YAAY,gBAAgBE,MAAM,CAAC,YAAc,YAAYC,MAAM,CAACC,MAAOR,EAAIS,UAAWC,SAAS,SAAUC,GAAMX,EAAIS,UAAUE,CAAG,EAAEC,WAAW,eAAeV,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,WAAWO,GAAG,CAAC,MAAQb,EAAIc,kBAAkB,CAACd,EAAIK,GAAG,WAAWH,EAAG,SAAS,CAACa,IAAI,gBAAgBX,YAAY,iBAAiBE,MAAM,CAAC,MAAQ,MAAM,OAAS,SAAS,EACxf,EACIU,EAAkB,GCYtB,GACAC,KAAA,cACAC,IAAAA,GACA,OACAT,UAAA,GAEA,EACAU,QAAA,CACAL,eAAAA,GACA,MAAAM,EAAA,KAAAC,MAAAC,cACAC,EAAAH,EAAAI,WAAA,MAGAD,EAAAE,UAAA,IAAAL,EAAAM,MAAAN,EAAAO,QAGAJ,EAAAK,UAAA,KAAAC,eAAA,SACAN,EAAAO,SAAA,IAAAV,EAAAM,MAAAN,EAAAO,QAGA,MAAAI,EAAA,KAAAtB,WAAA,MACAuB,EAAAD,EAAAE,MAAA,IACAC,EAAAF,EAAAG,OAEAH,EAAAI,SAAA,CAAAC,EAAAC,KACA,MAAAC,EAAA,KAAAC,aAAA,OACAC,EAAA,KAAAD,cAAA,OAEAjB,EAAAmB,KAAA,GAAAH,YACAhB,EAAAK,UAAA,KAAAC,eAAA,OACAN,EAAAoB,aAAA,SAGApB,EAAAqB,OAGA,MAAAC,EAAAzB,EAAAM,MAAAQ,EAAAI,EAAA,GACAQ,EAAA1B,EAAAO,OAAA,EAGAJ,EAAAwB,UAAAF,EAAAC,GACAvB,EAAAyB,OAAAP,EAAAQ,KAAAC,GAAA,KAGA3B,EAAA4B,SAAAd,EAAA,KAGAd,EAAA6B,SAAA,IAIA,QAAAC,EAAA,EAAAA,EAAA,EAAAA,IACA9B,EAAA+B,YAAA,KAAAzB,eAAA,SACAN,EAAAgC,YACAhC,EAAAiC,OACAP,KAAAQ,SAAArC,EAAAM,MACAuB,KAAAQ,SAAArC,EAAAO,QAEAJ,EAAAmC,OACAT,KAAAQ,SAAArC,EAAAM,MACAuB,KAAAQ,SAAArC,EAAAO,QAEAJ,EAAAoC,SAIA,QAAAN,EAAA,EAAAA,EAAA,GAAAA,IACA9B,EAAAK,UAAA,KAAAC,eAAA,OACAN,EAAAgC,YACAhC,EAAAqC,IACAX,KAAAQ,SAAArC,EAAAM,MACAuB,KAAAQ,SAAArC,EAAAO,OACA,EACA,EACA,EAAAsB,KAAAC,IAEA3B,EAAAsC,MAEA,EACAhC,cAAAA,CAAAiC,EAAAC,GACA,MAAAC,EAAAf,KAAAgB,MAAAhB,KAAAQ,UAAAM,EAAAD,GAAAA,GACAI,EAAAjB,KAAAgB,MAAAhB,KAAAQ,UAAAM,EAAAD,GAAAA,GACAK,EAAAlB,KAAAgB,MAAAhB,KAAAQ,UAAAM,EAAAD,GAAAA,GACA,aAAAE,MAAAE,MAAAC,IACA,EACA3B,YAAAA,CAAAsB,EAAAC,GACA,OAAAd,KAAAgB,MAAAhB,KAAAQ,UAAAM,EAAAD,EAAA,IAAAA,CACA,ICrG6P,I,UCQzPM,GAAY,OACd,EACArE,EACAiB,GACA,EACA,KACA,WACA,MAIF,EAAeoD,EAAiB,O","sources":["webpack://FE-useful-code/./src/views/captchaCode/index.vue","webpack://FE-useful-code/src/views/captchaCode/index.vue","webpack://FE-useful-code/./src/views/captchaCode/index.vue?d95d","webpack://FE-useful-code/./src/views/captchaCode/index.vue?62b1"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"captcha-page\"},[_c('h3',[_vm._v(\"验证码生成器\")]),_c('el-input',{staticClass:\"captcha-input\",attrs:{\"placeholder\":\"请输入验证码内容\"},model:{value:(_vm.inputText),callback:function ($$v) {_vm.inputText=$$v},expression:\"inputText\"}}),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.generateCaptcha}},[_vm._v(\"生成验证码\")]),_c('canvas',{ref:\"captchaCanvas\",staticClass:\"captcha-canvas\",attrs:{\"width\":\"200\",\"height\":\"80\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"captcha-page\">\r\n    <h3>验证码生成器</h3>\r\n    <el-input\r\n      v-model=\"inputText\"\r\n      placeholder=\"请输入验证码内容\"\r\n      class=\"captcha-input\"\r\n    />\r\n    <el-button type=\"primary\" @click=\"generateCaptcha\">生成验证码</el-button>\r\n    <canvas ref=\"captchaCanvas\" width=\"200\" height=\"80\" class=\"captcha-canvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CaptchaCode\",\r\n  data() {\r\n    return {\r\n      inputText: \"\", // 用户输入的验证码内容\r\n    };\r\n  },\r\n  methods: {\r\n    generateCaptcha() {\r\n      const canvas = this.$refs.captchaCanvas;\r\n      const ctx = canvas.getContext(\"2d\");\r\n\r\n      // 清空画布\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // 绘制背景\r\n      ctx.fillStyle = this.getRandomColor(200, 255);\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // 绘制验证码文字\r\n      const text = this.inputText || \"验证码\";\r\n      const charArray = text.split(\"\"); // 将文字拆分为单个字符\r\n      const charCount = charArray.length;\r\n\r\n      charArray.forEach((char, index) => {\r\n        const fontSize = this.getRandomInt(24, 36); // 随机字体大小\r\n        const angle = this.getRandomInt(-40, 40); // 随机旋转角度\r\n\r\n        ctx.font = `${fontSize}px Arial`;\r\n        ctx.fillStyle = this.getRandomColor(0, 150);\r\n        ctx.textBaseline = \"middle\";\r\n\r\n        // 保存当前状态\r\n        ctx.save();\r\n\r\n        // 计算每个字符的位置\r\n        const x = (canvas.width / charCount) * index + 10;\r\n        const y = canvas.height / 2;\r\n\r\n        // 设置旋转\r\n        ctx.translate(x, y);\r\n        ctx.rotate((angle * Math.PI) / 180);\r\n\r\n        // 绘制字符\r\n        ctx.fillText(char, 0, 0);\r\n\r\n        // 恢复状态\r\n        ctx.restore();\r\n      });\r\n\r\n      // 添加干扰线\r\n      for (let i = 0; i < 5; i++) {\r\n        ctx.strokeStyle = this.getRandomColor(100, 200);\r\n        ctx.beginPath();\r\n        ctx.moveTo(\r\n          Math.random() * canvas.width,\r\n          Math.random() * canvas.height\r\n        );\r\n        ctx.lineTo(\r\n          Math.random() * canvas.width,\r\n          Math.random() * canvas.height\r\n        );\r\n        ctx.stroke();\r\n      }\r\n\r\n      // 添加干扰点\r\n      for (let i = 0; i < 50; i++) {\r\n        ctx.fillStyle = this.getRandomColor(0, 255);\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          Math.random() * canvas.width,\r\n          Math.random() * canvas.height,\r\n          1,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        ctx.fill();\r\n      }\r\n    },\r\n    getRandomColor(min, max) {\r\n      const r = Math.floor(Math.random() * (max - min) + min);\r\n      const g = Math.floor(Math.random() * (max - min) + min);\r\n      const b = Math.floor(Math.random() * (max - min) + min);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    },\r\n    getRandomInt(min, max) {\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.captcha-page {\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.captcha-input {\r\n  margin-bottom: 10px;\r\n  width: 300px;\r\n}\r\n\r\n.captcha-canvas {\r\n  display: block;\r\n  margin: 20px auto;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=e9ae70e0&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=e9ae70e0&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e9ae70e0\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","model","value","inputText","callback","$$v","expression","on","generateCaptcha","ref","staticRenderFns","name","data","methods","canvas","$refs","captchaCanvas","ctx","getContext","clearRect","width","height","fillStyle","getRandomColor","fillRect","text","charArray","split","charCount","length","forEach","char","index","fontSize","getRandomInt","angle","font","textBaseline","save","x","y","translate","rotate","Math","PI","fillText","restore","i","strokeStyle","beginPath","moveTo","random","lineTo","stroke","arc","fill","min","max","r","floor","g","b","component"],"sourceRoot":""}